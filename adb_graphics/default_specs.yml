# This file contains the defaults for the graphics for each variable. 
#
# Acceptable keys for a variable:
#
#   accumulate: bool to specify whether there should be multiple forecast hours
#               present in the FieldData object
#
#   clevs: specifies the contour levels by one of the following methods
#      - a list with no quotes
#      - a numpy.arange specified as "!!python/object/apply:numpy.arange [list]"
#        with quotes. Specify "list" as with numpy.anumpy.arange() like this --
#        [[start, ]stop[, increment]]]. start and increment are options.
#      - the name of a function to be called that will return a list.
#
#   cmap: name of Python colormap
#
#   colors: name of function that defines a list of colors
#
#   contours: a dictionary of fields to be contoured, and their contour key word
#             arguments. the top level contour name should be the key for the
#             field to be hatched, and may inidicate a different level separated
#             by an underscore, e.g. rh_850mb would contour the 850mb level rh
#             on the map.
#
#   hatches: a dictionary of fields to be hatched, and their contourf key word
#            arguments. the top level hatch name should be the key for the field
#            to be hatched, and may have a different level separated by an
#            underscore, e.g. rh_850mb would hatch the 850mb level.
#
#   labels:  primarily used for the legend labels of hatched areas
#
#   ncl_name: the name of the variable as expected by NCL
#
#   print_units: bool for printing the units in the map title
#
#   ticks: the number of tick marks on the colorbar
#
#   title: a string representing a title to override the standard variable name
#          and level
#
#   transform: name of a function that will perform a given transformation of
#              the variable. To access the UPPData methods, provide only the name
#              of the method. To call a function from a module, use the syntax
#              "module.function"
#
#   unit: the resulting unit of the variable
#
#   vertical_index: index in grib2 file that gives the level
#                        of 2D field when two or more fields are "stacked"
#                        into a single 3D array.
#
#   wind: a boolean variable that switches on/off the wind barbs drawn from the
#         wind at the same level, OR a string specifying the key for the desired
#         wind level
#
#
# A few conventions must be followed for adding variables to this file.
#
#   Naming:
#      The variable name chosen here is the short name as specified by the
#      graphics file naming convention. This is imposed by the Python class
#      loading this file. Please add a comment to describe the variable when
#      adding it here.
#
#   Order:
#      Each set of items should be in alphabetical order for ease of code
#      maintenance, unless some other order makes more sense, i.e. a section
#      anchor needs to be applied before another section.
#

1hsnw: # 1 hr Accumulated Snow Using 10:1 Ratio
  sfc:
    clevs: [0.03, 0.05, 0.1, 0.5, 1, 2, 3, 4, 5, 6, 7, 8]
    cmap: gist_ncar
    colors: snow_colors
    ncl_name: WEASD_P8_L1_{grid}_acc1h
    ticks: 0
    title: 1 hr Accumulated Snow Using 10:1 Ratio
    transform: [conversions.kgm2_to_in, conversions.weasd_to_1hsnw]
    unit: in
1ref: # Reflectivity at 1 km AGL
  1000m: &refl
    clevs: !!python/object/apply:numpy.arange [5, 76, 5]
    cmap: NWSReflectivity
    colors: cref_colors
    ncl_name: REFD_P0_L103_{grid}
    ticks: 5
    title: 1 km agl Reflectivity
    unit: dBZ
acfrozr: # Run Total Graupel
  sfc: &graupel
    clevs: [0.002, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 1, 2]
    cmap: gist_ncar
    colors: pcp_colors
    ncl_name: FROZR_P8_L1_GLC0_acc{fhr}h
    ticks: 0
    title: Total Graupel (Sleet)
    transform: conversions.kgm2_to_in
    unit: in
acfrzr: # Run Total Freezing Rain
  sfc:
    <<: *graupel
    ncl_name: FRZR_P8_L1_GLC0_acc
    title: Run Total Freezing Rain
acpcp: # Accumulated run total precipitation
  sfc:
    clevs: [0.01, 0.1, 0.25, 0.5, 1, 2, 3, 5, 10, 15, 20, 40]
    cmap: gist_ncar
    colors: rainbow12_colors
    ncl_name: APCP_P8_L1_{grid}_acc{fhr}h
    ticks: 0
    transform: conversions.kgm2_to_in
    unit: in
acsnod: # Accumulated snow
  sfc: &snow
    clevs: [0.01, 0.1, 1, 2, 3, 4, 6, 8, 10, 12, 18, 24]
    cmap: gist_ncar
    colors: rainbow12_colors
    ncl_name: ASNOW_P8_L1_GLC0_acc
    ticks: 0
    title: Run Total Accumulated Snow Depth - var dens
    transform: conversions.m_to_in
    unit: in
acsnw: # Run Total Accumulated Snow Using 10:1 Ratio
  sfc:
    clevs: [0.01, 0.1, 1, 2, 3, 4, 6, 8, 10, 12, 18, 24]
    cmap: gist_ncar
    colors: snow_colors
    ncl_name: WEASD_P8_L1_{grid}_acc{fhr}h
    ticks: 0
    title: Run-Total Accumulated Snow Using 10:1 Ratio
    transform: [conversions.kgm2_to_in, conversions.weasd_to_1hsnw]
    unit: in
cape:
  mu: &cape # Most Unstable CAPE
    clevs: [1, 100, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000]
    cmap: gist_ncar
    colors: vort_colors
    contours:
      cape:
        colors: white
        levels: [1000, 100000]
        linewidths: 1.2
      lpl_agl:
        colors: 'k'
        levels: [50, 1000]
        linewidths: 0.6
    hatches:
      lpl_agl:
        alpha: 0.3
        hatches: ['', '///']
        levels: [50, 1000]
    ncl_name: CAPE_P0_2L108_{grid}
    ticks: 0
    title: Most Unstable CAPE
    unit: J/kg
    vertical_index: 2
  mul: # Most Unstable Layer CAPE
    <<: *cape
    contours:
      cape:
        colors: white
        levels: [1000, 100000]
        linewidths: 1.2
      lpl_agl:
        colors: 'k'
        levels: [50, 1000]
        linewidths: 0.6
    hatches:
      lpl_agl:
        alpha: 0.3
        hatches: ['', '///']
        levels: [50, 1000]
    ncl_name: CAPE_P0_2L108_{grid}
    title: Most Unstable Layer CAPE
    vertical_index: 1
  mx90mb: # Lowest 90 mb Mixed Layer CAPE
    <<: *cape
    contours:
      cape:
        colors: white
        levels: [1000, 100000]
        linewidths: 1.2
      cin:
        colors: 'k'
        levels: [-1000, -50]
        linewidths: 0.6
    hatches:
      cin_mx90mb:
        alpha: 0.3
        hatches: ['', '///']
        levels: [-1000, -50]
    vertical_index: 0
    ncl_name: CAPE_P0_2L108_{grid}
    title: Lowest 90 mb Mixed Layer CAPE
  sfc:
    <<: *cape
    contours:
      cin:
        colors: 'k'
        levels: [-1000, -50]
        linewidths: 0.6
    hatches:
      cin_sfclt:
        alpha: 0.3
        hatches: ['', '///']
        levels: [-1000, -50]
    ncl_name: CAPE_P0_L1_{grid}
    title: Surface CAPE
cell: # Storm cell motion
  ua:
    ncl_name: USTM_P0_2L103_{grid}
    transform:
      funcs: [vector_magnitude, conversions.ms_to_kt]
      kwargs:
        field2: VSTM_P0_2L103_{grid}
    unit: kt
ceil: # Ceiling
  ua: &ceil
    clevs: [0, 0.1, 0.3, 0.5, 1, 2, 3, 5, 10, 15, 20, 30, 52]
    cmap: gist_ncar
    colors: ceil_colors
    ncl_name: HGT_P0_L215_{grid}
    ticks: 0
    title: Ceiling
    transform:
      funcs: [field_diff, conversions.m_to_kft]
      kwargs:
        variable2: gh
        level2: sfc
    unit: kft agl
ceilexp: # Ceiling - experimental
  ua:
    <<: *ceil
    ncl_name: CEIL_P0_{grid}
    title: Ceiling (exp)
ceilexp2: # Ceiling - experimental no.2
  ua:
    <<: *ceil
    ncl_name: CEIL_P0_L2_{grid}
    title: Ceiling (exp-2)
cfrzr: # Categorical Freezing Rain
  sfc:
    ncl_name: CFRZR_P0_L1_{grid}
cicep: # Categorical Ice Pellets
  sfc:
    ncl_name: CFRZR_P0_L1_{grid}
cin: # Surface Convective Inhibition
  mu:
    clevs: [-300, -200, -150, -100, -75, -50, -40, -30, -20, -10, -1]
    cmap: gist_ncar
    colors: cin_colors
    ncl_name: CIN_P0_2L108_{grid}
    unit: J/kg
    vertical_index: 2
  mx90mb: # Lowest 90 mb Mixed Layer CIN
    ncl_name: CIN_P0_2L108_{grid}
    title: 'ML CIN < -50'
    vertical_index: 0
  sfc: &sfc_cin
    clevs: [-300, -200, -150, -100, -75, -50, -40, -30, -20, -10, -1]
    cmap: gist_ncar
    colors: cin_colors
    ncl_name: CIN_P0_L1_{grid}
    ticks: 0
    title: Surface CIN
    unit: J/kg
    vertical_index: 2
  sfclt:
    <<: *sfc_cin
    title: Surface CIN < -50
cloudcover:
  bndylay: &cld_cover # PBL ... 1 km Cloud Cover
    clevs: [2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95]
    cmap: gist_ncar
    colors: cldcov_colors
    ncl_name: TCDC_P0_L211_{grid}
    ticks: 0
    title: PBL ... 1km Cloud Cover
    unit: '%'
  high:
    <<: *cld_cover
    clevs: [2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95]
    cmap: gist_ncar
    colors: cldcov_colors
    ncl_name: HCDC_P0_L234_{grid}
    ticks: 0
    title: High-Level Cloud Cover
    unit: '%'
  low:
    <<: *cld_cover
    ncl_name: LCDC_P0_L214_{grid}
    title: Low-Level Cloud Cover
  mid:
    <<: *cld_cover
    ncl_name: MCDC_P0_L224_{grid}
    title: Mid-Level Cloud Cover
  total:
    <<: *cld_cover
    ncl_name: TCDC_P0_L{level_type}_{grid}
    title: Total Cloud Cover
clwmr: # Cloud water Mixing Ratio
  ua:
    ncl_name: 
      nat: CLWMR_P0_L105_{grid}
      prs: CLWMR_P0_L100_{grid}
cpofp: # Frozen Precipitation Percentage
  sfc:
    clevs: [-0.1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    cmap: gist_ncar
    colors: frzn_colors
    ncl_name: CPOFP_P0_L1_{grid}
    ticks: 0
    title: Frozen Precip Percentage
    unit: '%'
crain: # Categorical Rain
  sfc:
    ncl_name: CRAIN_P0_L1_{grid}
cref: # Composite reflectivity
  esbl:
    <<: *refl
    ncl_name: REFC_P0_L10_{grid}
    title: Ensemble Composite Reflectivity
  sfc:
    <<: *refl
    ncl_name: REFC_P0_L{level_type}_{grid}
    title: Composite Reflectivity
csnow: # Categorical Snow
  sfc:
    ncl_name: CSNOW_P0_L1_{grid}
ctop: # Cloud top height
  ua:
    clevs: !!python/object/apply:numpy.arange [0, 61, 5]
    cmap: gist_ncar
    colors: ceil_colors
    ncl_name: HGT_P0_L3_{grid}
    ticks: 0
    title: Cloud Top Height
    transform: conversions.m_to_kft
    unit: kft asl
dewp: # Dew point temperature
  2m:
    clevs: [-60, -50, -40, -30, -20, -10, 0, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 80, 90, 100, 110, 120]
    cmap: Carbone42_r
    colors: dewp_colors
    ncl_name: DPT_P0_L103_{grid}
    ticks: -4
    transform: conversions.k_to_f
    unit: F
    wind: 10m
echotop: # Echo Top
  sfc:
    clevs: !!python/object/apply:numpy.arange [4, 50, 3]
    cmap: NWSReflectivity
    colors: cref_colors
    ncl_name: 
      hrrr: RETOP_P0_L3_{grid}
      rap: RETOP_P0_L3_{grid}
      rrfs: RETOP_P0_L200_{grid}
    ticks: 0
    title: Echo Top
    transform: conversions.m_to_kft
    unit: kft
flru: # Aviation Flight Rules
  sfc:
    clevs: [0.0, 1.0, 2.0, 3.0, 4.0]
    cmap: gist_ncar
    colors: flru_colors
    ncl_name: HGT_P0_L215_GLC0
    ticks: 1
    title: Aviation Flight Rules
    transform:
      funcs: [field_diff, conversions.m_to_kft, aviation_flight_rules]
      kwargs:
        variable2: gh
        level2: sfc
    unit: " "
G113bt: # GOES-W Brightness temperature, water vapor (Ch 3)
  sat: &goes_sat
    clevs: !!python/object/apply:numpy.arange [-80, 41, 1]
    cmap: WVCIMSS_r
    colors: goes_colors
    ncl_name: SBT113_P0_L8_{grid}
    ticks: -10
    title: GOES-W Brightness Temperature, Water Vapor
    transform: conversions.k_to_c
    unit: ch 3
G114bt: # GOES-W Brightness temperature, infrared (Ch 4)
  sat:
    <<: *goes_sat
    ncl_name: SBT114_P0_L8_{grid}
    title: GOES-W Brightness Temperature, Infrared
    unit: ch 4
G123bt: # GOES-E Brightness temperature, water vapor (Ch 3)
  sat:
    <<: *goes_sat
    ncl_name: SBT123_P0_L8_{grid}
    title: GOES-E Brightness Temperature, Water Vapor
G124bt: # GOES-E Brightness temperature, infrared (Ch 4)
  sat:
    <<: *goes_sat
    ncl_name: SBT124_P0_L8_{grid}
    title: GOES-E Brightness Temperature, Infrared
    unit: ch 4
gh: # Geopotential height
  250mb: &ua_gh
    clevs: !!python/object/apply:numpy.arange [6, 1170, 6]
    cmap: precipitation
    colors: terrain_colors
    ncl_name:
      prs: HGT_P0_L100_{grid}
      nat: HGT_P0_L105_{grid}
    ticks: 4
    transform: conversions.m_to_dm
    unit: dm
  500mb:
    <<: *ua_gh
  700mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [201, 373, 3]
  850mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [3, 600, 3]
  925mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [3, 600, 3]
  1000mb:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [500, 600, 10]
  sfc:
    <<: *ua_gh
    clevs: !!python/object/apply:numpy.arange [0, 5000, 250]
    cmap: gist_earth
    ncl_name: HGT_P0_L1_{grid}
    ticks: 0
    transform: []
    unit: gpm
  ua:
    <<: *ua_gh
grle: # Graupel
  ua:
    ncl_name:
      nat: GRLE_P0_L105_{grid}
      prs: GRLE_P0_L100_{grid}
gust:
  10m:
    clevs: !!python/object/apply:numpy.arange [5, 95, 5]
    cmap: gist_ncar
    colors: wind_colors
    ncl_name: GUST_P0_L1_{grid}
    ticks: 5
    transform: conversions.ms_to_kt
    unit: kt
hail: # Max 1h Hail diameter
  maxsfc: &hail # surface
    clevs: [0.01, 0.25, 0.50, 0.75, 1.0, 1.5, 2.0, 2.5, 3.0]
    cmap: gist_ncar
    colors: hail_colors
    ncl_name: HAIL_P8_L104_{grid}_max1h
    ticks: 0
    title: Max 1h Hail/Graupel Diameter at Surface
    transform: conversions.m_to_in
    unit: in
  max: # total atmosphere
    <<: *hail
    ncl_name: HAIL_P8_L10_{grid}_max1h
    title: Max 1h Hail/Graupel Diameter, Total Atm
hailcast: # Max 1h Hail diameter
  maxsfc: # surface, from HAILCAST
    <<: *hail
    ncl_name: HAIL_P8_L1_{grid}_max1h
    title: Max 1h Hail Diameterat Sfc from HAILCAST
hlcy: # Helicity
  in16: &hlcy # Hourly updraft helicity over 1-6 km layer
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    cmap: gist_ncar
    colors: rainbow12_colors
    ncl_name: UPHL_P0_2L103_{grid}
    split: True
    ticks: 25
    title: 1-6km Updraft Helicity
    unit: m2/s2
  in25: # Hourly updraft helicity over 2-5 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    ncl_name: UPHL_P0_2L103_{grid}
    split: True
    title: 2-5km Updraft Helicity
  mn02: &hlcy_mn02 # Hourly minimum of updraft helicity over 0-2 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [12.5, 150.5, 12.5]
    ncl_name: VAR_0_7_200_P8_2L103_{grid}_min1h
    split: True
    ticks: 12.5
    title: 0-2km Min Updraft Helicity (over prv hr)
  mn03: &hlcy_mn03 # Hourly minimum of updraft helicity over 0-3 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [12.5, 150.5, 12.5]
    ncl_name: VAR_0_7_200_P8_2L103_{grid}_min1h
    split: True
    ticks: 12.5
    title: 0-3km Min Updraft Helicity (over prv hr)
  mn16: &hlcy_mn16 # Hourly minimum of updraft helicity over 1-6 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    ncl_name: VAR_0_7_200_P8_2L103_{grid}_min1h
    split: True
    title: 1-6km Min Updraft Helicity (over prv hr)
  mn25: &hlcy_mn25 # Hourly minimum of updraft helicity over 2-5 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    split: True
    ncl_name: VAR_0_7_200_P8_2L103_{grid}_min1h
    title: 2-5km Min Updraft Helicity (over prv hr)
  mx02: &hlcy_mx02 # Hourly maximum of updraft helicity over 0-2 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [12.5, 150.5, 12.5]
    ncl_name: MXUPHL_P8_2L103_{grid}_max1h
    split: True
    ticks: 12.5
    title: 0-2km Max Updraft Helicity (over prv hr)
  mx03: &hlcy_mx03 # Hourly maximum of updraft helicity over 0-3 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [12.5, 150.5, 12.5]
    ncl_name: MXUPHL_P8_2L103_{grid}_max1h
    split: True
    ticks: 12.5
    title: 0-3km Max Updraft Helicity (over prv hr)
  mx16: &hlcy_mx16 # Hourly maximum of updraft helicity over 1-6 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    ncl_name: MXUPHL_P8_2L103_{grid}_max1h
    split: True
    title: 1-6km Max Updraft Helicity (over prv hr)
  mx25: &hlcy_mx25 # Hourly maximum of updraft helicity over 2-5 km layer
    <<: *hlcy
    clevs: !!python/object/apply:numpy.arange [25, 301, 25]
    ncl_name: MXUPHL_P8_2L103_{grid}_max1h
    split: True
    title: 2-5km Max Updraft Helicity (over prv hr)
  sr01: # 0-1 km Storm Relative Helicity
    <<: *hlcy
    clevs: [25, 50, 100, 150, 200, 250, 300, 400, 500, 600, 700, 800]
    ncl_name: HLCY_P0_2L103_{grid}
    unit: $m^2 / s^2$
    split: True
    ticks: 0
    title: 0-1 km Storm Relative Helicity
  sr03: # 0-3 km Storm Relative Helicity
    <<: *hlcy
    clevs: [25, 50, 100, 150, 200, 250, 300, 400, 500, 600, 700, 800]
    ncl_name: HLCY_P0_2L103_{grid}
    unit: $m^2 / s^2$
    split: True
    ticks: 0
    title: 0-3 km Storm Relative Helicity
hlcytot:
  mn02:
    <<: *hlcy_mn02
    accumulate: True
    title: Run Total 0-2km Min Updraft Helicity (over prv hr)
    transform: run_total
  mn03:
    <<: *hlcy_mn03
    accumulate: True
    title: Run Total 0-6km Min Updraft Helicity (over prv hr)
    transform: run_total
  mn16:
    <<: *hlcy_mn16
    accumulate: True
    title: Run Total 1-6km Min Updraft Helicity (over prv hr)
    transform: run_total
  mn25:
    <<: *hlcy_mn25
    accumulate: True
    title: Run Total 2-5km Min Updraft Helicity (over prv hr)
    transform: run_total
  mx02:
    <<: *hlcy_mx02
    accumulate: True
    title: Run Total 0-2km Max Updraft Helicity (over prv hr)
    transform: run_total
  mx03:
    <<: *hlcy_mx03
    accumulate: True
    title: Run Total 0-6km Max Updraft Helicity (over prv hr)
    transform: run_total
  mx16:
    <<: *hlcy_mx16
    accumulate: True
    title: Run Total 1-6km Max Updraft Helicity (over prv hr)
    transform: run_total
  mx25:
    <<: *hlcy_mx25
    accumulate: True
    title: Run Total 2-5km Max Updraft Helicity (over prv hr)
    transform: run_total
hpbl: # Height of Planetary Boundary Layer
  sfc: 
    clevs: [25, 50, 100, 200, 300, 500, 750, 1000, 1500, 2000, 2500, 3000, 4000, 5000]
    cmap: ir_rgbv
    colors: pbl_colors
    ncl_name: HPBL_P0_L1_{grid}
    ticks: 0
    title: PBL Height
    unit: m
icmr: # Ice Water Mixing Ratio
  ua:
    ncl_name:
      nat:
        - ICMR_P0_L105_{grid}
        - CIMIXR_P0_L105_{grid}
      prs: ICMR_P0_L100_{grid}
lcl: # Lifted condensation level
  sfc: &lcl
    clevs: !!python/object/apply:numpy.arange [0, 5000, 250]
    cmap: rainbow
    colors: lcl_colors
    contours:
      lcl:
        colors: white
        levels: [1000, 100000]
        linewidths: 1.2
    ncl_name: HGT_P0_L5_{grid}
    ticks: -2
    title: Lifted Condensation Level Height
    unit: m agl
  ua:
    <<: *lcl
    unit: m
lhtfl: # Latent Heat Net Flux
  sfc: &heat_flux
    clevs: !!python/object/apply:numpy.arange [-100, 401, 25]
    cmap: Carbone42
    colors: heat_flux_colors
    ncl_name: LHTFL_P0_L1_{grid}
    ticks: 0
    title: Latent Heat Net Flux
    unit: W/m^2
li: # Lifted Index
  best: &lifted_index
    clevs: !!python/object/apply:numpy.arange [-15, 16]
    cmap: Spectral
    colors: lifted_index_colors
    ncl_name: 4LFTX_P0_2L108_{grid}
    ticks: 0
    title: Best Lifted Index (lowest 180 mb)
    unit: C
  sfc:
    <<: *lifted_index
    ncl_name: LFTX_P0_2L100_{grid}
    title: Surface Lifted Index
lpl: # Lifted parcel level
  agl:
    ncl_name: PLPL_P0_2L108_{grid}
    title: Lifted Parcel Level AGL >50
    transform:
      funcs: [conversions.pa_to_hpa, field_diff, opposite]
      kwargs:
        variable2: pres
        level2: sfc
    unit: hPa
  ua:
    ncl_name: PLPL_P0_2L108_{grid}
    transform: conversions.pa_to_hpa
    unit: hPa
ltg3: # Lightning Threat (LTG1 ... LTG2)
  sfc: 
    clevs: [0.02, 0.5, 1.0, 1.5, 2.0, 2.5, 3, 4, 5, 6, 7, 8, 10, 12]
    cmap: NWSReflectivity
    colors: cref_colors
    ncl_name: LTNG_P0_L10_{grid}
    ticks: 0
    title: Lightning Threat (comb of LTG1 and LTG2)
    unit: flashes / km^2 / 5 min
mref: # Maximum reflectivity for past hour at 1 km AGL
  sfc:
    <<: *refl
    ncl_name: MAXREF_P8_L103_{grid}_max1h
    title: Max 1km agl Reflectivity (over prev hr)
pres:
  sfc:
    clevs: !!python/object/apply:numpy.arange [650, 1051, 4]
    cmap: gist_ncar
    colors: ps_colors
    ncl_name: PRES_P0_L1_{grid}
    ticks: 20
    transform: conversions.pa_to_hpa
    unit: hPa
  msl:
    clevs: !!python/object/apply:numpy.arange [650, 1051, 4]
    cmap: gist_ncar
    colors: ps_colors
    ncl_name:
      hrrr: MSLMA_P0_L101_{grid}
      rap: MSLMA_P0_L101_{grid}
      rrfs: PRMSL_P0_L101_{grid}
    ticks: 20
    transform: conversions.pa_to_hpa
    unit: hPa
  ua:
    ncl_name: PRES_P0_L105_{grid}
ptmp: # Potential temperature
  2m:
    clevs: !!python/object/apply:numpy.arange [210, 350, 5]
    cmap: jet
    colors: t_colors
    ncl_name: POT_P0_L103_{grid}
    ticks: 10
    unit: K
    wind: 10m
ptyp: # Hourly total precipitation
  sfc:
    clevs: [0.002, 0.01, 0.05, 0.1, 0.25, 0.50, 0.75, 1.0, 2.0]
    cmap: gist_ncar
    colors: pcp_colors
    contours:
      crain_sfc:
        colors: green
        levels: [0, 1]
        linewidths: 0.2
      csnow_sfc:
        colors: blue
        levels: [0, 1]
        linewidths: 0.2
      cfrzr_sfc:
        colors: purple
        levels: [0, 1]
        linewidths: 0.5
      cicep_sfc:
        colors: red
        levels: [0, 1]
        linewidths: 0.5
    hatches:
      # python causes an error using contourf with the
      # option "extend='both'" for 3-char string colors
      # ('red', 'tan', etc.), so leave in lists
      crain_sfc:
        colors: [green]
        hatches: ['', '|||']
        labels: Rain
        levels: [0, 1]
        linewidths: 0.1
      csnow_sfc:
        colors: [blue]
        hatches: ['', '---']
        labels: Snow
        levels: [0, 1]
        linewidths: 0.1
      cfrzr_sfc:
        colors: [purple]
        hatches: ['', '///']
        labels: Freezing Rain
        levels: [0, 1]
        linewidths: 0.2
      cicep_sfc:
        colors: [red]
        hatches: ['', '\\\\']
        labels: Ice Pellets
        levels: [0, 1]
        linewidths: 0.2
    ncl_name: APCP_P8_L1_GLC0_acc1h
    ticks: 0
    title: 1 hr Total Precip, Precip Type
    transform: conversions.kgm2_to_in
    unit: in
pwtr: # Precipitable water
  sfc:
    clevs: !!python/object/apply:numpy.arange [4, 81, 4]
    cmap: gist_ncar
    colors: pw_colors
    ncl_name: PWAT_P0_L200_{grid}
    ticks: 4
    unit: mm
ref: # Maximum reflectivity for past hour at 1 km AGL
  m10:
    <<: *refl
    ncl_name: REFD_P0_L20_{grid}
    title: -10C Isothermal Reflectivity
  maxm10:
    <<: *refl
    ncl_name: REFD_P8_L20_{grid}_max1h
    title: Max 1h -10C Isothermal Reflectivity
rh: # Relative Humidity
  2m: &rh
    clevs: [10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 100, 105]
    cmap: gist_ncar
    colors: rainbow12_colors
    ncl_name: RH_P0_L103_{grid}
    ticks: 10
    unit: '%'
  500mb: &rh_ua
    <<: *rh
    ncl_name: RH_P0_L100_{grid}
    contours:
      pres_sfc:
        colors: 'k'
        levels: [0, 500]
        linewidths: 0.6
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 500]
  525mb:
    <<: *rh_ua
  550mb:
    <<: *rh_ua
  575mb:
    <<: *rh_ua
  600mb:
    <<: *rh_ua
  625mb:
    <<: *rh_ua
  650mb:
    <<: *rh_ua
  675mb:
    <<: *rh_ua
  700mb:
    <<: *rh_ua
    contours:
      pres_sfc:
        levels: [0, 700]
        colors: 'k'
        linewidths: 0.6
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 700]
  725mb:
    <<: *rh_ua
  750mb:
    <<: *rh_ua
  775mb:
    <<: *rh_ua
  800mb:
    <<: *rh_ua
  825mb:
    <<: *rh_ua
  850mb:
    <<: *rh_ua
    contours:
      pres_sfc:
        levels: [0, 850]
        colors: 'k'
        linewidths: 0.6
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 850]
  mean: # Mean RH 850mb to 500mb
    <<: *rh
    print_units: false
    title: Mean 850-500mb Relative Humidity (%, shaded), 700mb Wind (kt)
    transform: 
      funcs: field_mean
      kwargs:
        variable: rh
        levels: [500mb, 525mb, 550mb, 575mb, 600mb, 625mb, 650mb, 675mb, 700mb, 725mb, 750mb, 775mb, 800mb, 825mb, 850mb]
    vertical_index: 0 # Not used in mean computation, but is used to initialize new array for summing levels
    wind: 700mb
  pw: # RH wrt Precipitable Water
    <<: *rh
    ncl_name: RHPW_P0_L10_{grid}
    title: Relative Humidity wrt Precipitable Water
rvil: # Radar-derived Vertically Integrated Liquid
  sfc: &vert_int_liq
    clevs: [0.05, 0.15, 0.76, 3.47, 6.92, 12, 31.6, 35, 40, 45, 50, 55, 60, 65, 70]
    cmap: NWSReflectivity
    colors: cref_colors
    ncl_name: 
      hrrr: VIL_P0_L{level_type}_{grid}
      rap: VIL_P0_L{level_type}_{grid}
      rrfs: VIL_P0_L200_{grid}
    ticks: 0
    title: Radar-derived Vertically Integrated Liquid
    unit: kg/m^2
rwmr: # Rain Mixing Ratio
  ua:
    ncl_name:
      nat: RWMR_P0_L105_{grid}
      prs: RWMR_P0_L100_{grid}
shear:
  01km: &shear # 0-1 km
    clevs: !!python/object/apply:numpy.arange [5, 91, 5]
    cmap: jet
    colors: shear_colors
    ncl_name: VUCSH_P0_2L103_{grid}
    split: True
    transform:
      funcs: vector_magnitude
      kwargs:
        field2: VVCSH_P0_2L103_{grid}
        one_lev: True
        split: True
        level: 01km
    ticks: 0
    unit: $s^{-1}$
  06km: # 0-6 km
    <<: *shear
    split: True
    transform:
      funcs: vector_magnitude
      kwargs:
        field2: VVCSH_P0_2L103_{grid}
        one_lev: True
        split: True
        level: 06km
shtfl: # Sensible Heat Net Flux
  sfc:
    <<: *heat_flux
    ncl_name: SHTFL_P0_L1_{grid}
    ticks: 0
    title: Sensible Heat Net Flux
    unit: W/m^2
slw: # Supercooled Liquid Water
  sfc:
    clevs: [0.05, 0.1, 0.2, .3, .4, .5, .75, 1., 1.25, 1.5, 2., 3., 4., 5., 6.]
    cmap: NWSReflectivity
    colors: cref_colors
    ncl_name: VIL_P0_L10_{grid}
    ticks: 0
    title: Supercooled Liquid Water
    transform: supercooled_liquid_water
    unit: kg/m^2
snmr: # Snow Mixing Ratio
  ua:
    ncl_name:
      nat: SNMR_P0_L105_{grid}
      prs: SNMR_P0_L100_{grid}
snod: # Snow Depth
  sfc:
    <<: *snow
    ncl_name: SNOD_P0_L1_GLC0
    title:  Cycled Snow Depth
soilm: # Soil Moisture Availability
  sfc:
    clevs: [0, 5, 15, 25, 35, 45, 55, 65, 75, 85, 95]
    cmap: Spectral
    colors: soilm_colors
    ncl_name:
      hrrr: MSTAV_P0_L106_{grid}
      rap: MSTAV_P0_L106_{grid}
      rrfs: SOILM_P0_2L106_{grid}
    ticks: 0
    title: Soil Moisture Availability
    unit: "%"
soilt: # Soil Temperature
  0cm: &soilt_levs
    clevs: !!python/object/apply:numpy.arange [240, 311, 10]
    cmap: gist_ncar
    colors: soilt_colors
    ncl_name: TSOIL_P0_2L106_{grid}
    ticks: 0
    title: Soil Temperature at Sfc
    unit: K
  1cm:
    <<: *soilt_levs
    title: Soil Temperature at 1cm
  4cm:
    <<: *soilt_levs
    title: Soil Temperature at 4cm
  10cm:
    <<: *soilt_levs
    title: Soil Temperature at 10cm
  30cm:
    <<: *soilt_levs
    title: Soil Temperature at 30cm
  40cm:
    <<: *soilt_levs
    title: Soil Temperature at 30cm
  60cm:
    <<: *soilt_levs
    title: Soil Temperature at 60cm
  1m:
    <<: *soilt_levs
    title: Soil Temperature at 1m
  1.6m:
    <<: *soilt_levs
    title: Soil Temperature at 1.6m
  3m:
    <<: *soilt_levs
    title: Soil Temperature at 3m
soilw: # Soil Moisture
  0cm: &soilw_levs
    clevs: !!python/object/apply:numpy.arange [0.0, 0.61, 0.1]
    cmap: gist_ncar
    colors: soilw_colors
    ncl_name: SOILW_P0_2L106_{grid}
    ticks: 0
    title: Soil Moisture at Sfc
    unit: fraction
  1cm:
    <<: *soilw_levs
    title: Soil Moisture at 1cm
  4cm:
    <<: *soilw_levs
    title: Soil Moisture at 4cm
  10cm:
    <<: *soilw_levs
    title: Soil Moisture at 10cm
  30cm:
    <<: *soilw_levs
    title: Soil Moisture at 30cm
  40cm:
    <<: *soilw_levs
    title: Soil Moisture at 40cm
  60cm:
    <<: *soilw_levs
    title: Soil Moisture at 60cm
  1m:
    <<: *soilw_levs
    title: Soil Moisture at 1m
  1.6m:
    <<: *soilw_levs
    title: Soil Moisture at 1.6m
  3m:
    <<: *soilw_levs
    title: Soil Moisture at 3m
solar: # Incoming Solar Radiation
  sfc: &incoming_radiation
    clevs: [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100]
    cmap: gist_ncar
    colors: vort_colors
    ncl_name: DSWRF_P0_L1_{grid}
    ticks: 0
    title: Incoming Solar Radiation
    unit: W/m^2
sphum: # Specific humidity
  ua:
    ncl_name: SPFH_P0_L105_{grid}
ssrun: # Storm Surface Runoff
  sfc: &precip
    clevs: [0.002, 0.01, 0.05, 0.1, 0.25, 0.50, 0.75, 1.0, 2.0]
    cmap: gist_ncar
    colors: pcp_colors
    ncl_name: SSRUN_P8_L1_{grid}_acc1h
    ticks: 0
    title: Storm Surface Runoff
    transform: conversions.kgm2_to_in
    unit: in
temp: # Temperature
  2ds: # 2m - Sfc
    clevs: !!python/object/apply:numpy.arange [-16, 17, 2]
    cmap: seismic
    colors: centered_diff
    ncl_name: TMP_P0_L103_{grid} # 2m Temp
    ticks: 2
    title: 2m Temp - Skin Temp
    transform:
      funcs: [conversions.k_to_f, field_diff]
      kwargs:
        variable2: temp
        level2: sfc
    unit: F
    wind: False
  2m:
    clevs: !!python/object/apply:numpy.arange [-60, 120, 10]
    cmap: jet
    colors: t_colors
    ncl_name: TMP_P0_L103_{grid}
    ticks: 10
    transform: conversions.k_to_f
    unit: F
    wind: 10m
  500mb: &ua_temp
    clevs: !!python/object/apply:numpy.arange [-70, 10, 2.5]
    cmap: jet
    colors: t_colors
    contours:
      pres_sfc:
        levels: [0, 500]
        colors: 'k'
        linewidths: 0.6
      gh:
        colors: grey
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 500]
    ncl_name:
      prs: TMP_P0_L100_{grid}
      nat: TMP_P0_L105_{grid}
    ticks: 5
    transform: conversions.k_to_c
    unit: C
    wind: True
  700mb:
    <<: *ua_temp
    clevs: !!python/object/apply:numpy.arange [-40, 40, 2.5]
    contours:
      pres_sfc:
        colors: 'k'
        levels: [0, 700]
        linewidths: 0.6
      gh:
        colors: grey
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 700]
  850mb:
    <<: *ua_temp
    clevs: !!python/object/apply:numpy.arange [-40, 40, 2.5]
    contours:
      pres_sfc:
        colors: 'k'
        levels: [0, 850]
        linewidths: 0.6
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 850]
  925mb:
    <<: *ua_temp
    clevs: !!python/object/apply:numpy.arange [-40, 40, 2.5]
    contours:
      pres_sfc:
        colors: 'k'
        levels: [0, 925]
        linewidths: 0.6
    hatches:
      pres_sfc:
        hatches: ['', '...']
        levels: [0, 925]
  sfc:
    clevs: !!python/object/apply:numpy.arange [-60, 120, 10]
    cmap: jet
    colors: t_colors
    ncl_name: TMP_P0_L1_{grid}
    ticks: 20
    transform: conversions.k_to_f
    unit: F
    wind: False
  ua:
    <<: *ua_temp
thick:
  500mb:
    <<: *ua_gh
    title: 1000-500 Thick
    transform:
      funcs: [conversions.m_to_dm, field_diff]
      kwargs:
        variable2: gh
        level2: 1000mb
totp: # Hourly total precipitation
  sfc:
    <<: *precip
    contours:
      pres_msl:
        colors: red
        linewidths: 0.4
        levels: !!python/object/apply:numpy.arange [650, 1051, 2]
      thick_500mb:
        colors: blue
        levels: !!python/object/apply:numpy.arange [402, 601, 6]
        linewidths: 0.4
        linestyles: dashed
    ncl_name: APCP_P8_L1_{grid}_acc1h
    title: 1 hr Total Precip
u:
  10m: &agl_uwind
    ncl_name: UGRD_P0_L103_{grid}
    transform: conversions.ms_to_kt
  80m: *agl_uwind
  250mb: &ua_uwind
    ncl_name:
      prs: UGRD_P0_L100_{grid}
      nat: UGRD_P0_L105_{grid}
    transform: conversions.ms_to_kt
  500mb: *ua_uwind
  700mb: *ua_uwind
  850mb: *ua_uwind
  925mb: *ua_uwind
  max:
    ncl_name: MAXUW_P8_L103_{grid}_max1h
    transform: conversions.ms_to_kt
  ua:
    <<: *ua_uwind
ulwrf: # Upward Longwave Radiation Flux
  sfc: &radiation_flux
    clevs: !!python/object/apply:numpy.arange [350, 601, 10]
    cmap: gist_ncar
    colors: radiation_colors
    ncl_name: ULWRF_P0_L1_{grid}
    ticks: 0
    title: Upward Longwave Radiation Flux, Surface
    unit: W/m^2
  top: # Nominal top of atmosphere
    clevs: !!python/object/apply:numpy.arange [80, 341, 2]
    cmap: ir_rgbv_r
    colors: radiation_mix_colors
    ncl_name: ULWRF_P0_L8_{grid}
    ticks: 20
    title: Outgoing Longwave Radiation Flux, Top of Atmosphere
    unit: W/m^2
uswrf: # Upward Shortwave Radiation Flux
  sfc:
    <<: *radiation_flux
    ncl_name: USWRF_P0_L1_{grid}
    title: Upward Shortwave Radiation Flux, Surface
  top: # Nominal top of atmosphere
    <<: *radiation_flux
    clevs: !!python/object/apply:numpy.arange [50, 851, 10]
    cmap: Greys_r
    colors: radiation_bw_colors
    ncl_name: USWRF_P0_L8_{grid}
    ticks: 40
    title: Outgoing Shortwave Radiation Flux, Top of Atmosphere
v:
  10m: &agl_wind
    ncl_name: VGRD_P0_L103_{grid}
    transform: conversions.ms_to_kt
  80m: *agl_wind
  250mb: &ua_vwind
    ncl_name:
      prs: VGRD_P0_L100_{grid}
      nat: VGRD_P0_L105_{grid}
    transform: conversions.ms_to_kt
  500mb: *ua_vwind
  700mb: *ua_vwind
  850mb: *ua_vwind
  925mb: *ua_vwind
  max:
    ncl_name: MAXVW_P8_L103_{grid}_max1h
    transform: conversions.ms_to_kt
  ua:
    <<: *ua_vwind
vbdsf: # Incoming Direct Radiation
  sfc:
    <<: *incoming_radiation
    ncl_name: VBDSF_P0_L1_{grid}
    title: Incoming Direct Radiation
vddsf: # Incoming Diffuse Radiation
  sfc:
    <<: *incoming_radiation
    ncl_name: VDDSF_P0_L1_{grid}
    title: Incoming Diffuse Radiation
vig: # Vertically-integrated graupel
  sfc:
    clevs: !!python/object/apply:numpy.arange [5, 91, 5]
    cmap: jet
    colors: graupel_colors
    ncl_name: TCOLG_P8_L200_{grid}_max1h
    ticks: 0
    title: Max Vertically Integrated Graupel (over previous hour)
    unit: mm
vil: # Vertically Integrated Liquid
  sfc:
    <<: *vert_int_liq
    ncl_name: VAR_0_16_201_P0_L10_{grid}
    title: Vertically Integrated Liquid
vis: # Visibility
  sfc:
    clevs: [0.0625, 0.125, 0.25, 0.5, 1, 1.5, 2, 3, 4, 5, 10, 30, 50]
    cmap: gist_ncar
    colors: vis_colors
    ncl_name: VIS_P0_L1_{grid}
    ticks: 0
    title: Sfc Visibility
    transform: conversions.m_to_mi
    unit: mi
vort: # Absolute vorticity
  500mb:
    clevs: !!python/object/apply:numpy.arange [6, 29, 2]
    cmap: gist_ncar
    colors: vort_colors
    contours:
      gh:
        colors: 'xkcd:light gray'
    ncl_name: ABSV_P0_L100_{grid}
    ticks: 2
    transform: conversions.vort_scale
    unit: 1E-5/s
vvel: # Vertical velocity
  700mb:
    clevs: !!python/object/apply:numpy.arange [-17, 34, 5]
    cmap: gist_ncar
    colors: vvel_colors
    contours:
      gh:
        colors: grey
    ncl_name: VVEL_P0_L100_{grid}
    ticks: 5
    transform: conversions.vvel_scale
    unit: -Pa/s * 10
  mean: # Mean Vertical Veolcity
    clevs: [-20, -15, -10, -5, -1, -0.75, -0.5, -0.25, -0.1, 0.1, 0.25, 0.5, 0.75, 1, 5, 10, 15, 20]
    cmap: Spectral_r
    colors: mean_vvel_colors
    ncl_name: DZDT_P8_2L104_{grid}_avg1h
    ticks: 0
    title: Mean Vertical Velocity, sigma layers 0.5-0.8
    unit: m/s
vvort: # Vertical vorticity
  mx01: &vvort # Hourly maximum of vertical vorticity over 0-2 km layer
    clevs: !!python/object/apply:numpy.arange [0.0025, 0.0301, 0.0025]
    cmap: gist_ncar
    colors: vort_colors
    ncl_name: RELV_P8_2L103_{grid}_max1h
    ticks: 0
    title: 0-1km Max Vertical Velocity (over prev hour)
    unit: 1/s
  mx02: # Hourly maximum of vertical vorticity over 0-2 km layer
    <<: *vvort 
    title: 0-2km Max Vertical Velocity (over prev hour)
weasd: # Water equivalent of accumulated snow depth
  sfc:
    clevs: [0.01, 0.1, 0.3, 0.5, 1, 2, 3, 4, 5, 7.5, 10, 20]
    cmap: gist_ncar
    colors: snow_colors
    ncl_name: WEASD_P0_L1_{grid}
    ticks: 0
    title: Snow Water Equivalent
    transform: conversions.kgm2_to_in
    unit: in
wspeed: # Wind Speed
  10m: &ua_wspeed
    clevs: !!python/object/apply:numpy.arange [5, 95, 5]
    cmap: gist_ncar
    colors: wind_colors
    ncl_name: UGRD_P0_L103_{grid}
    ticks: 5
    title: 10m Wind
    transform:
      funcs: [vector_magnitude, conversions.ms_to_kt]
      kwargs:
        field2: VGRD_P0_L103_{grid}
    unit: kt
    wind: True
  250mb:
    <<: *ua_wspeed
    clevs: [20, 40, 60, 70, 80, 90, 100, 110, 120, 140, 160, 180, 200]
    colors: wind_colors_high
    contours:
      gh:
        colors: white
        linewidths: 1.2
    ncl_name: UGRD_P0_L100_{grid}
    ticks: 0
    title: 250mb Wind
    transform:
      funcs: [vector_magnitude, conversions.ms_to_kt]
      kwargs: 
        field2: VGRD_P0_L100_{grid}
  80m:
    <<: *ua_wspeed
    title: 80m Wind
    transform:
      funcs: [vector_magnitude, conversions.ms_to_kt]
      kwargs:
        field2: VGRD_P0_L103_{grid}
  850mb:
    <<: *ua_wspeed
    contours:
      gh:
        colors: white
        linewidths: 1.2
    ncl_name: UGRD_P0_L100_{grid}
    title: 850mb Wind
    transform:
      funcs: [vector_magnitude, conversions.ms_to_kt]
      kwargs:
        field2: VGRD_P0_L100_{grid}
  max: # Hourly Maximum 10m Wind
    <<: *ua_wspeed
    ncl_name: WIND_P8_L103_{grid}_max1h
    title: Max 10m Wind (over prev hour)
    transform: conversions.ms_to_kt
  mdn: # Hourly Maximum Downdraft Velocity
    clevs: [-40, -35, -30, -25, -22.5, -20, -17.5, -15, -12.5, -10, -7.5, -5, -2.5, -2, -1.5, -1, -0.5]
    cmap: jet
    colors: mdn_colors
    ncl_name: MAXDVV_P8_2L108_{grid}_max1h
    ticks: 0
    title: Max Downdraft Velocity (over prev hour)
    unit: m/s
  mup: # Hourly Maximum Updraft Velocity
    clevs: [0.5, 1, 1.5, 2, 2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25, 30, 35, 40]
    cmap: jet
    colors: mup_colors
    ncl_name: MAXUVV_P8_2L108_{grid}_max1h
    ticks: 0
    title: Max Updraft Velocity (over prev hour)
    unit: m/s
  ua:
    <<: *ua_wspeed
